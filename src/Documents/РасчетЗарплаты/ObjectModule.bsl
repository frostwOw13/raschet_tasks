
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    НаборОсновные = Движения.ОсновныеНачисления;
    НаборПремии = Движения.Премии;
    НаборУдержания = Движения.Удержания;
    
    ТекстЗапроса = ПолучитьТекстЗапросаДляНабораЗаписейОсновныеНачисления();
       
    Расчеты.ЗаполнитьНаборЗаписей(ТекстЗапроса, Ссылка, НаборОсновные);
    НаборОсновные.Записать(, Ложь);
    
    ТаблицаСторноЗаписей = НаборОсновные.ПолучитьДополнение();
    Для каждого СтрокаСторно Из ТаблицаСторноЗаписей Цикл
        ДобавитьСтрокуСторно(НаборОсновные, СтрокаСторно, ОсновныеНачисления);
    КонецЦикла;                                                               
    Записать();
    НаборОсновные.Записать(, Ложь);
    
    
    ТекстЗапроса = ПолучитьТекстЗапросаДляНабораЗаписейПремия();
    
    Расчеты.ЗаполнитьНаборЗаписей(ТекстЗапроса, Ссылка, НаборПремии);
    НаборПремии.Записать(, Ложь);
    
    ТекстЗапроса = 
        "ВЫБРАТЬ
        |   РасчетЗарплатыУдержания.НомерСтроки КАК НомерСтроки,
        |   РасчетЗарплатыУдержания.Сотрудник КАК Сотрудник,
        |   РасчетЗарплатыУдержания.Должность КАК Должность,
        |   РасчетЗарплатыУдержания.ВидРасчета КАК ВидРасчета,
        |   РасчетЗарплатыУдержания.БазовыйПериодНачало КАК БазовыйПериодНачало,
        |   ВЫБОР
        |       КОГДА РасчетЗарплатыУдержания.БазовыйПериодКонец = ДАТАВРЕМЯ(1, 1, 1)
        |           ТОГДА РасчетЗарплатыУдержания.БазовыйПериодКонец
        |       ИНАЧЕ КОНЕЦПЕРИОДА(РасчетЗарплатыУдержания.БазовыйПериодКонец, ДЕНЬ)
        |   КОНЕЦ КАК БазовыйПериодКонец,
        |   РасчетЗарплатыУдержания.Размер КАК Размер,
        |   РасчетЗарплатыУдержания.Ссылка.ПериодРегистрации КАК ПериодРегистрации
        |ИЗ
        |   Документ.РасчетЗарплаты.Удержания КАК РасчетЗарплатыУдержания
        |ГДЕ
        |   РасчетЗарплатыУдержания.Ссылка = &Ссылка
        |
        |УПОРЯДОЧИТЬ ПО
        |   НомерСтроки";
    
    Расчеты.ЗаполнитьНаборЗаписей(ТекстЗапроса, Ссылка, НаборУдержания);
    НаборУдержания.Записать(, Ложь);

    
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
        |   ОсновныеНачисленияДанныеГрафика.ВидРасчета.СпособРасчета КАК СпособРасчета,
        |   ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК НормаВремени,
        |   ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Отработано
        |ИЗ
        |   РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
        |           Регистратор = &Регистратор
        |               И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ОсновныеНачисленияДанныеГрафика
        |
        |УПОРЯДОЧИТЬ ПО
        |   НомерСтроки";
    
    Запрос.УстановитьПараметр("КатегорияРасчета", Справочники.КатегорииРасчета.Первичное);
    Запрос.УстановитьПараметр("Регистратор", Ссылка);
    Выборка = Запрос.Выполнить().Выбрать();
    Расчеты.РассчитатьЗаписиРегистраРасчета(НаборОсновные, Выборка);
    НаборОсновные.Записать(, Ложь);
        
    
    Запрос.Текст = 
        "ВЫБРАТЬ
        |    ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
        |    ОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
        |    ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК СуммаБазы
        |ИЗ
        |    РегистрРасчета.ОсновныеНачисления КАК ОсновныеНачисления
        |        ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(
        |                &ИзмеренияОсновногоРегистра,
        |                &ИзмеренияБазовогоРегистра,
        |                ,
        |                Регистратор = &Регистратор
        |                    И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ОсновныеНачисленияБазаОсновныеНачисления
        |        ПО ОсновныеНачисления.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки
        |ГДЕ
        |    ОсновныеНачисления.Регистратор = &Регистратор
        |    И ОсновныеНачисления.ВидРасчета.КатегорияРасчета = &КатегорияРасчета
        |
        |УПОРЯДОЧИТЬ ПО
        |    НомерСтроки";
    
    Запрос.УстановитьПараметр("КатегорияРасчета", Справочники.КатегорииРасчета.ЗависимоеПервогоУровня);
    
    Измерения = Новый Массив();
    Измерения.Добавить("Сотрудник");
    Измерения.Добавить("Должность");
    
    Запрос.УстановитьПараметр("ИзмеренияОсновногоРегистра", Измерения);
    Запрос.УстановитьПараметр("ИзмеренияБазовогоРегистра", Измерения);
    
    Выборка = Запрос.Выполнить().Выбрать();
    Расчеты.РассчитатьЗаписиРегистраРасчета(НаборОсновные, Выборка);
    НаборОсновные.Записать(, Истина);
    
    
    // расчет пропорционально времени
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   ОсновныеНачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
        |   ОсновныеНачисленияДанныеГрафика.ВидРасчета.СпособРасчета КАК СпособРасчета,
        |   ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК НормаВремени,
        |   ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Отработано,
        |   ЕСТЬNULL(ОсновныеНачисленияБазаОсновныеНачисления.РезультатБаза, 0) КАК СуммаБазы
        |ИЗ
        |   РегистрРасчета.ОсновныеНачисления.ДанныеГрафика(
        |           Регистратор = &Регистратор
        |               И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ОсновныеНачисленияДанныеГрафика
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисления.БазаОсновныеНачисления(
        |               &ИзмеренияОсновногоРегистра,
        |               &ИзмеренияБазовогоРегистра,
        |               ,
        |               Регистратор = &Регистратор
        |                   И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ОсновныеНачисленияБазаОсновныеНачисления
        |       ПО ОсновныеНачисленияДанныеГрафика.НомерСтроки = ОсновныеНачисленияБазаОсновныеНачисления.НомерСтроки
        |ГДЕ
        |   ОсновныеНачисленияДанныеГрафика.Регистратор = &Регистратор
        |   И ОсновныеНачисленияДанныеГрафика.ВидРасчета.КатегорияРасчета = &КатегорияРасчета
        |
        |УПОРЯДОЧИТЬ ПО
        |   НомерСтроки";
    Запрос.УстановитьПараметр("КатегорияРасчета", Справочники.КатегорииРасчета.ЗависимоеВторогоУровня);
    Выборка = Запрос.Выполнить().Выбрать();
    Расчеты.РассчитатьЗаписиРегистраРасчета(НаборОсновные, Выборка);
    НаборОсновные.Записать(, Истина);
    
    
    
    
    // расчет премий
    // запрос для получения категорий расчета
    ЗапросКатегорийРасчета = Новый Запрос;
    ЗапросКатегорийРасчета.Текст = 
        "ВЫБРАТЬ
        |   КатегорииРасчета.Ссылка КАК Ссылка
        |ИЗ
        |   Справочник.КатегорииРасчета КАК КатегорииРасчета
        |
        |УПОРЯДОЧИТЬ ПО
        |   КатегорииРасчета.Код";
    
    РезультатЗапроса = ЗапросКатегорийРасчета.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    // вызов процедуры расчета премии для всех категорий расчета
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        РассчитатьПремии(НаборПремии, Запрос, ВыборкаДетальныеЗаписи.Ссылка);
    КонецЦикла;

    
    
        
    // расчет результата удержания
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   Удержания.НомерСтроки КАК НомерСтроки,
        |   Удержания.ВидРасчета.СпособРасчета КАК СпособРасчета,
        |   ЕСТЬNULL(УдержанияБазаОсновныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(УдержанияБазаПремии.РезультатБаза, 0) КАК СуммаБазы
        |ИЗ
        |   РегистрРасчета.Удержания КАК Удержания
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Удержания.БазаОсновныеНачисления(
        |               &ИзмеренияОсновногоРегистра,
        |               &ИзмеренияБазовогоРегистра,
        |               ,
        |               Регистратор = &Регистратор
        |                   И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК УдержанияБазаОсновныеНачисления
        |       ПО Удержания.НомерСтроки = УдержанияБазаОсновныеНачисления.НомерСтроки
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Удержания.БазаПремии(
        |               &ИзмеренияОсновногоРегистра,
        |               &ИзмеренияБазовогоРегистра,
        |               ,
        |               Регистратор = &Регистратор
        |                   И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК УдержанияБазаПремии
        |       ПО Удержания.НомерСтроки = УдержанияБазаПремии.НомерСтроки
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Удержания.БазаУдержания(
        |               &ИзмеренияОсновногоРегистра,
        |               &ИзмеренияБазовогоРегистра,
        |               ,
        |               Регистратор = &Регистратор
        |                   И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК УдержанияБазаУдержания
        |       ПО Удержания.НомерСтроки = УдержанияБазаУдержания.НомерСтроки
        |ГДЕ
        |   Удержания.Регистратор = &Регистратор
        |   И Удержания.ВидРасчета.КатегорияРасчета = &КатегорияРасчета
        |
        |УПОРЯДОЧИТЬ ПО
        |   НомерСтроки";                                                                              
    
    Запрос.УстановитьПараметр("КатегорияРасчета", Справочники.КатегорииРасчета.ЗависимоеПервогоУровня);
    
    Выборка = Запрос.Выполнить().Выбрать();
    Расчеты.РассчитатьЗаписиРегистраРасчета(НаборУдержания, Выборка);
    НаборУдержания.Записать(, Истина);
    
КонецПроцедуры

Функция ПолучитьТекстЗапросаДляНабораЗаписейПремия()
	ТекстЗапроса = 
	    "ВЫБРАТЬ
	    |   РасчетЗарплатыПремии.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	    |   РасчетЗарплатыПремии.Сотрудник КАК Сотрудник,
	    |   РасчетЗарплатыПремии.Должность КАК Должность,
	    |   РасчетЗарплатыПремии.ВидРасчета КАК ВидРасчета,
	    |   РасчетЗарплатыПремии.БазовыйПериодНачало КАК БазовыйПериодНачало,
	    |   ВЫБОР
	    |       КОГДА РасчетЗарплатыПремии.БазовыйПериодКонец = ДАТАВРЕМЯ(1, 1, 1)
	    |           ТОГДА РасчетЗарплатыПремии.БазовыйПериодКонец
	    |       ИНАЧЕ КОНЕЦПЕРИОДА(РасчетЗарплатыПремии.БазовыйПериодКонец, ДЕНЬ)
	    |   КОНЕЦ КАК БазовыйПериодКонец,
	    |   РасчетЗарплатыПремии.Размер КАК Размер,
	    |   РасчетЗарплатыПремии.Сторно КАК Сторно
	    |ИЗ
	    |   Документ.РасчетЗарплаты.Премии КАК РасчетЗарплатыПремии
	    |ГДЕ
	    |   РасчетЗарплатыПремии.Ссылка = &Ссылка
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |   РасчетЗарплатыПремии.НомерСтроки";
	Возврат ТекстЗапроса
КонецФункции

Функция ПолучитьТекстЗапросаДляНабораЗаписейОсновныеНачисления()
	Перем ТекстЗапроса;
	ТекстЗапроса = 
	    "ВЫБРАТЬ
	    |   РасчетЗарплатыОсновныеНачисления.Ссылка.ПериодРегистрации КАК ПериодРегистрации,
	    |   РасчетЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
	    |   РасчетЗарплатыОсновныеНачисления.Должность КАК Должность,
	    |   РасчетЗарплатыОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	    |   РасчетЗарплатыОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	    |   КОНЕЦПЕРИОДА(РасчетЗарплатыОсновныеНачисления.ПериодДействияКонец, ДЕНЬ) КАК ПериодДействияКонец,
	    |   РасчетЗарплатыОсновныеНачисления.БазовыйПериодНачало КАК БазовыйПериодНачало,
	    |   ВЫБОР
	    |       КОГДА РасчетЗарплатыОсновныеНачисления.БазовыйПериодКонец = ДАТАВРЕМЯ(1, 1, 1)
	    |           ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	    |       ИНАЧЕ КОНЕЦПЕРИОДА(РасчетЗарплатыОсновныеНачисления.БазовыйПериодКонец, ДЕНЬ)
	    |   КОНЕЦ КАК БазовыйПериодКонец,
	    |   РасчетЗарплатыОсновныеНачисления.Размер КАК Размер,
	    |   РасчетЗарплатыОсновныеНачисления.ГрафикРаботы КАК ГрафикРаботы,
	    |   РасчетЗарплатыОсновныеНачисления.Сторно КАК Сторно,
	    |   РасчетЗарплатыОсновныеНачисления.НомерСтроки КАК НомерСтроки
	    |ИЗ
	    |   Документ.РасчетЗарплаты.ОсновныеНачисления КАК РасчетЗарплатыОсновныеНачисления
	    |ГДЕ
	    |   РасчетЗарплатыОсновныеНачисления.Ссылка = &Ссылка
	    |
	    |УПОРЯДОЧИТЬ ПО
	    |   РасчетЗарплатыОсновныеНачисления.НомерСтроки";
	Возврат ТекстЗапроса
КонецФункции

Процедура РассчитатьПремии(НаборЗаписей, Запрос, КатегорияРасчета)
    Запрос.Текст = 
        "ВЫБРАТЬ
        |   Премии.НомерСтроки КАК НомерСтроки,
        |   Премии.ВидРасчета.СпособРасчета КАК СпособРасчета,
        |   ЕСТЬNULL(ПремииБазаОсновныеНачисления.РезультатБаза, 0) + ЕСТЬNULL(ПремииБазаПремии.РезультатБаза, 0) КАК СуммаБазы
        |ИЗ
        |   РегистрРасчета.Премии КАК Премии
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Премии.БазаОсновныеНачисления(
        |               &ИзмеренияОсновногоРегистра,
        |               &ИзмеренияБазовогоРегистра,
        |               ,
        |               Регистратор = &Регистратор
        |                   И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ПремииБазаОсновныеНачисления
        |       ПО Премии.НомерСтроки = ПремииБазаОсновныеНачисления.НомерСтроки
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.Премии.БазаПремии(
        |               &ИзмеренияОсновногоРегистра,
        |               &ИзмеренияБазовогоРегистра,
        |               ,
        |               Регистратор = &Регистратор
        |                   И ВидРасчета.КатегорияРасчета = &КатегорияРасчета) КАК ПремииБазаПремии
        |       ПО Премии.НомерСтроки = ПремииБазаПремии.НомерСтроки
        |ГДЕ
        |   Премии.Регистратор = &Регистратор
        |   И Премии.ВидРасчета.КатегорияРасчета = &КатегорияРасчета
        |
        |УПОРЯДОЧИТЬ ПО
        |   НомерСтроки";
    
    Запрос.УстановитьПараметр("КатегорияРасчета", КатегорияРасчета);    
    Выборка = Запрос.Выполнить().Выбрать();
    
    Расчеты.РассчитатьЗаписиРегистраРасчета(НаборЗаписей, Выборка);
    НаборЗаписей.Записать(, Истина);
КонецПроцедуры

Процедура ДобавитьСтрокуСторно(НаборЗаписей, СтрокаСторно, ТабличнаяЧасть)
    
    // Добавление записей в набор записей
    ЗаписьРегистра = НаборЗаписей.Добавить();
    
    ЗаписьРегистра.ПериодРегистрации = СтрокаСторно.ПериодРегистрацииСторно;
    ЗаписьРегистра.ПериодДействияНачало = СтрокаСторно.ПериодДействияНачалоСторно;
    ЗаписьРегистра.ПериодДействияКонец = СтрокаСторно.ПериодДействияКонецСторно;
    ЗаписьРегистра.БазовыйПериодНачало = СтрокаСторно.БазовыйПериодНачало;
    ЗаписьРегистра.БазовыйПериодКонец = СтрокаСторно.БазовыйПериодКонец;
    ЗаписьРегистра.ВидРасчета = СтрокаСторно.ВидРасчета;
    ЗаписьРегистра.Сторно = Истина;
    
    ЗаписьРегистра.Сотрудник = СтрокаСторно.Сотрудник;
    ЗаписьРегистра.Должность = СтрокаСторно.Должность;
    
    ЗаписьРегистра.Размер = СтрокаСторно.Размер;
    ЗаписьРегистра.ГрафикРаботы = СтрокаСторно.ГрафикРаботы;
    
    // Добавление строки в табличную часть
    СтрокаТЧ = ТабличнаяЧасть.Добавить();
                                                                      
    СтрокаТЧ.ПериодДействияНачало = СтрокаСторно.ПериодДействияНачалоСторно;
    СтрокаТЧ.ПериодДействияКонец = СтрокаСторно.ПериодДействияКонецСторно;
    СтрокаТЧ.БазовыйПериодНачало = СтрокаСторно.БазовыйПериодНачало;
    СтрокаТЧ.БазовыйПериодКонец = СтрокаСторно.БазовыйПериодКонец;
    СтрокаТЧ.ВидРасчета = СтрокаСторно.ВидРасчета;
    СтрокаТЧ.Сторно = Истина;
    
    СтрокаТЧ.Сотрудник = СтрокаСторно.Сотрудник;
    СтрокаТЧ.Должность = СтрокаСторно.Должность;
    
    СтрокаТЧ.Размер = СтрокаСторно.Размер;
    СтрокаТЧ.ГрафикРаботы = СтрокаСторно.ГрафикРаботы;
    
КонецПроцедуры










